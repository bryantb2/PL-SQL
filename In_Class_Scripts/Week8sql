-- PROBLEM 1
SELECT * FROM PRODUCT;

CREATE OR REPLACE FUNCTION GET_PRODUCT_PRICE
(PRODUCT_ID_ARG IN NUMBER)
  RETURN NUMBER
IS 
  PRODUCT_PRICE_VAL NUMBER;
BEGIN
  -- SELECT DATA FROM DB  
  SELECT PRODUCT.PRODUCT_PRICE
    INTO PRODUCT_PRICE_VAL
    FROM PRODUCT
    WHERE PRODUCT.PRODUCT_ID = PRODUCT_ID_ARG;
    
  --  RETURN DATA  
  RETURN  PRODUCT_PRICE_VAL;
END GET_PRODUCT_PRICE;

CREATE OR REPLACE PROCEDURE CALCULATE_PRODUCT_DISCOUNT
(PRODUCT_ID_ARG IN NUMBER,
PRODUCT_DISCOUNT_ARG IN NUMBER)
IS
  PRODUCT_PRICE NUMBER;
  DISCOUNTED_PRICE NUMBER;
BEGIN
  -- GET PRODUCT PRICE
  PRODUCT_PRICE := GET_PRODUCT_PRICE(PRODUCT_ID_ARG);
  -- CALCULATE PRODUCT DISCOUNT
  DISCOUNTED_PRICE := PRODUCT_PRICE - (PRODUCT_PRICE * (PRODUCT_DISCOUNT_ARG/100));
  -- PRINT PRICES
  DBMS_OUTPUT.PUT_LINE('Original price of product, with Id of ' || PRODUCT_ID_ARG || ', is $' || PRODUCT_PRICE || '.');
  DBMS_OUTPUT.PUT_LINE('Discounted price is $' || DISCOUNTED_PRICE);
END;

set feedback on;
set serveroutput on;
DECLARE
BEGIN
  CALCULATE_PRODUCT_DISCOUNT(2,50);
END;

-- PROBLEM 2
CREATE OR REPLACE TYPE PRODUCT_NESTED_TABLE IS TABLE OF VARCHAR2(50);

CREATE TABLE SHOPPERS 
(SHOPPER_ID NUMBER(10) PRIMARY KEY,
PRODUCT_TABLE PRODUCT_NESTED_TABLE)
NESTED TABLE PRODUCT_TABLE STORE AS SHOPPER_PRODUCTS;

INSERT INTO SHOPPERS (SHOPPER_ID, PRODUCT_TABLE)
VALUES (578, PRODUCT_NESTED_TABLE('100','4','956'));
SELECT * FROM SHOPPERS;

CREATE OR REPLACE FUNCTION IS_PRODUCT_IN_CART
(PRODUCT_ID_ARG IN VARCHAR2)
RETURN BOOLEAN
IS
  -- GET SHOPPING DATA FROM DB
  CURSOR SHOPPER_CUR IS
    SELECT * FROM SHOPPERS;
BEGIN
  -- LOOP THROUGH SHOPPING RECORDS
  FOR SHOPPER_REC IN SHOPPER_CUR
  LOOP
    -- LOOP THROUGH PRODUCT RECORDS
    FOR INDX IN SHOPPER_REC.PRODUCT_TABLE.FIRST .. SHOPPER_REC.PRODUCT_TABLE.LAST
    LOOP
      IF(SHOPPER_REC.PRODUCT_TABLE(INDX) = PRODUCT_ID_ARG) THEN
        RETURN TRUE;
      END IF;
    END LOOP;
  END LOOP;
  RETURN FALSE;
END IS_PRODUCT_IN_CART;

CREATE OR REPLACE FUNCTION CONVERT_BOOL_TO_VARCHAR
(STATUS_ARG IN BOOLEAN)
RETURN VARCHAR2
IS
  TRUE_STRING VARCHAR2(10) := 'TRUE';
  FALSE_STRING VARCHAR2(10) := 'FALSE';
BEGIN
  IF(STATUS_ARG = TRUE) THEN
    RETURN TRUE_STRING;
  ELSE
    RETURN FALSE_STRING;
  END IF;  
END;

set feedback on;
set serveroutput on;
DECLARE
  PRODUCT_ID_ONE VARCHAR2(10) := '100';
  PRODUCT_ID_TWO VARCHAR2(10) := '300';
  TEST_ONE BOOLEAN := IS_PRODUCT_IN_CART(PRODUCT_ID_ONE);
  TEST_TWO BOOLEAN := IS_PRODUCT_IN_CART(PRODUCT_ID_TWO);
BEGIN
  DBMS_OUTPUT.PUT_LINE('Searching shopper table for product with ID of ' || PRODUCT_ID_ONE || ', expecting true: '  || CONVERT_BOOL_TO_VARCHAR(TEST_ONE));
  DBMS_OUTPUT.PUT_LINE('Searching shopper table for product with ID of ' || PRODUCT_ID_TWO || ', expecting false: ' || CONVERT_BOOL_TO_VARCHAR(TEST_TWO));
END;








