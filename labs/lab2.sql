-- PROBLEM 1
SELECT * FROM AGENT;
SELECT * FROM HOUSE_SALE;
DESCRIBE HOUSE_SALE;

set feedback on;
set serveroutput on;

DECLARE
  V_AGENT_FNAME VARCHAR2(20);
  V_AGENT_LNAME VARCHAR2(20);
  V_AGENT_LEVEL VARCHAR2(10);
  V_SALE_PRICE NUMBER(15,5);
  V_BONUS_PRICE NUMBER;
  V_SALE_COMMISSION NUMBER;
BEGIN
  -- GET AGENT INFO
  SELECT AGENT.AGENT_LEVEL, AGENT.AGENT_LAST_NAME, AGENT.AGENT_FIRST_NAME, HOUSE_SALE.SALE_PRICE
    INTO V_AGENT_LEVEL, V_AGENT_LNAME, V_AGENT_FNAME, V_SALE_PRICE
    FROM AGENT
    JOIN HOUSE_SALE ON AGENT.AGENT_ID = HOUSE_SALE.FK_AGENT_ID
    WHERE AGENT.AGENT_ID = 201;
  
  -- CALC PRICE
  IF V_AGENT_LEVEL = 'H' THEN 
    V_BONUS_PRICE := 25000;
    V_SALE_COMMISSION := 1.15;
  ELSIF V_AGENT_LEVEL = 'M' THEN
    V_BONUS_PRICE := 10000;
    V_SALE_COMMISSION := 1.10;
  ELSE
    V_BONUS_PRICE := 5000;
    V_SALE_COMMISSION := 1.05;
  END IF;
  
  -- PRINT PRICE
  DBMS_OUTPUT.PUT_LINE('HOUSE SOLD BY ' || V_AGENT_FNAME || ' ' || V_AGENT_LNAME || ' FOR ' || TO_CHAR(V_SALE_PRICE, 'L999G999D99') || '.');
  DBMS_OUTPUT.PUT_LINE('AGENT RECIEVED ' || ((V_SALE_COMMISSION * 100)-100) || '% IN COMMISSION, WHICH EQUATES TO ' || TO_CHAR((V_SALE_COMMISSION * V_SALE_PRICE),'L999G999D99')  
      || ', AND A BONUS OF ' ||  TO_CHAR(V_BONUS_PRICE,'L999G999D99') || '.');
  DBMS_OUTPUT.PUT_LINE('SALE TOTAL COMES TO ' || TO_CHAR((V_BONUS_PRICE + V_SALE_COMMISSION +V_SALE_PRICE ), 'L999G999D99'));
END;


-- PROBLEM 2
set feedback on;
set serveroutput on;

DECLARE
  V_AGENT_FNAME VARCHAR2(20);
  V_AGENT_LNAME VARCHAR2(20);
  V_AGENT_LEVEL VARCHAR2(10);
  V_SALE_PRICE NUMBER(15,5);
  V_BONUS_PRICE NUMBER;
  V_SALE_COMMISSION NUMBER;
BEGIN
  -- GET AGENT INFO
  SELECT AGENT.AGENT_LEVEL, AGENT.AGENT_LAST_NAME, AGENT.AGENT_FIRST_NAME, HOUSE_SALE.SALE_PRICE
    INTO V_AGENT_LEVEL, V_AGENT_LNAME, V_AGENT_FNAME, V_SALE_PRICE
    FROM AGENT
    JOIN HOUSE_SALE ON AGENT.AGENT_ID = HOUSE_SALE.FK_AGENT_ID
    WHERE AGENT.AGENT_ID = 201;
  
  -- CALC PRICE
  CASE V_AGENT_LEVEL
    WHEN 'H' THEN
      V_BONUS_PRICE := 25000;
      V_SALE_COMMISSION := 1.15;
    WHEN 'M' THEN
      V_BONUS_PRICE := 10000;
      V_SALE_COMMISSION := 1.10;
    WHEN 'L' THEN 
      V_BONUS_PRICE := 5000;
      V_SALE_COMMISSION := 1.05;
    ELSE 
      V_BONUS_PRICE := 0;
      V_SALE_COMMISSION := 0;
  END CASE;    
  
  -- PRINT PRICE
  DBMS_OUTPUT.PUT_LINE('HOUSE SOLD BY ' || V_AGENT_FNAME || ' ' || V_AGENT_LNAME || ' FOR ' || TO_CHAR(V_SALE_PRICE, 'L999G999D99') || '.');
  DBMS_OUTPUT.PUT_LINE('AGENT RECIEVED ' || ((V_SALE_COMMISSION * 100)-100) || '% IN COMMISSION, WHICH EQUATES TO ' || TO_CHAR((V_SALE_COMMISSION * V_SALE_PRICE),'L999G999D99')  
      || ', AND A BONUS OF ' ||  TO_CHAR(V_BONUS_PRICE,'L999G999D99') || '.');
  DBMS_OUTPUT.PUT_LINE('SALE TOTAL COMES TO ' || TO_CHAR((V_BONUS_PRICE + V_SALE_COMMISSION +V_SALE_PRICE ), 'L999G999D99'));
END;


-- PROBLEM 3
SELECT * FROM STUDENT;
SELECT * FROM CLASS;

set feedback on;
set serveroutput on;

DECLARE
  V_FRESHMAN_COUNT NUMBER := 0;
  V_SOPHOMORE_COUNT NUMBER := 0;
  V_JUNIOR_COUNT NUMBER := 0;
  V_SENIOR_COUNT NUMBER := 0;
  
  V_TOTAL_SEATS NUMBER := 20;
  V_SENIORS_WAITING   NUMBER := 0;
  V_JUNIORS_WAITING   NUMBER := 0;
  V_SOPHOMORE_WAITING NUMBER := 0;
  V_FRESHMAN_WAITING  NUMBER := 0;
  
  --V_ALREADY_PRINTED BOOLEAN := FALSE;
BEGIN
  -- SELECT COUNTS
  SELECT COUNT(STUDENT.STUDENT_ID)
    INTO V_FRESHMAN_COUNT
    FROM STUDENT
    WHERE STUDENT.FK_STUDENT_TYPE_ID = 'F';
  SELECT COUNT(STUDENT.STUDENT_ID)
    INTO V_SOPHOMORE_COUNT
    FROM STUDENT
    WHERE STUDENT.FK_STUDENT_TYPE_ID = 'S';
  SELECT COUNT(STUDENT.STUDENT_ID)
    INTO V_JUNIOR_COUNT
    FROM STUDENT
    WHERE STUDENT.FK_STUDENT_TYPE_ID = 'J';
  SELECT COUNT(STUDENT.STUDENT_ID)
    INTO V_SENIOR_COUNT
    FROM STUDENT
    WHERE STUDENT.FK_STUDENT_TYPE_ID = 'R';
    
  -- CALCULATE BASKET WEAVING SEATS REMAINING
  IF (V_TOTAL_SEATS - V_SENIOR_COUNT) >= 0 THEN
    -- SUBTRACT SENIOR COUNT
    V_TOTAL_SEATS := V_TOTAL_SEATS - V_SENIOR_COUNT;
    IF (V_TOTAL_SEATS - V_JUNIOR_COUNT) >= 0 THEN
      -- SUBTRACT JUNIOR COUNT
      V_TOTAL_SEATS := V_TOTAL_SEATS - V_JUNIOR_COUNT;
      IF (V_TOTAL_SEATS - V_SOPHOMORE_COUNT >= 0) THEN
        -- SUBTRACT SOPHOMORE COUNT
        V_TOTAL_SEATS := V_TOTAL_SEATS - V_SOPHOMORE_COUNT;
        IF ((V_TOTAL_SEATS - V_FRESHMAN_COUNT) < 0) THEN 
          -- ASSUMPTION IS THAT THE NUMBER OF FRESHMEN + SOPHOMORES + JUNIORS + SENIORS EXCEEDS THE NUMBER OF SEATS
          V_SENIORS_WAITING   := 0;
          V_JUNIORS_WAITING   := 0;
          V_SOPHOMORE_WAITING := 0;
          V_FRESHMAN_WAITING  := ABS(V_TOTAL_SEATS - V_FRESHMAN_COUNT);
        END IF;
      ELSE
        -- ASSUMPTION IS THAT THE NUMBER OF SOPHOMORES + JUNIORS + SENIORS EXCEEDS THE NUMBER OF SEATS
        V_SENIORS_WAITING   := 0;
        V_JUNIORS_WAITING   := 0;
        V_SOPHOMORE_WAITING := ABS(V_TOTAL_SEATS - V_SOPHOMORE_COUNT);
        V_FRESHMAN_WAITING  := V_FRESHMAN_COUNT;
      END IF;
    ELSE
      -- ASSUMPTION IS THAT THE NUMBER OF JUNIORS + SENIORS EXCEEDS THE NUMBER OF SEATS
      V_SENIORS_WAITING   := 0;
      V_JUNIORS_WAITING   := ABS(V_TOTAL_SEATS - V_JUNIOR_COUNT);
      V_SOPHOMORE_WAITING := V_SOPHOMORE_COUNT;
      V_FRESHMAN_WAITING  := V_FRESHMAN_COUNT;
    END IF;
  ELSE
    -- ASSUMPTION IS THAT THE NUMBER OF SENIORS ALREADY EXCEEDS THE NUMBER OF SEATS
    V_SENIORS_WAITING   := ABS(V_TOTAL_SEATS - V_SENIOR_COUNT);
    V_JUNIORS_WAITING   := V_JUNIOR_COUNT;
    V_SOPHOMORE_WAITING := V_SOPHOMORE_COUNT;
    V_FRESHMAN_WAITING  := V_FRESHMAN_COUNT;
  END IF; 
  
  -- PRINT APPROPRIATE DBMS WAITING LIST MESSAGE
  DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_FRESHMAN_COUNT   || ' FRESHMEN.');
  DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_SOPHOMORE_COUNT  || ' SOPHOMORES.');
  DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_JUNIOR_COUNT     || ' JUNIORS.');
  DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_SENIOR_COUNT     || ' SENIORS.');
  DBMS_OUTPUT.PUT_LINE('-----------------------------------------------');
  
  IF V_FRESHMAN_WAITING = 0 THEN
    DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_FRESHMAN_COUNT   || ' FRESHMEN IN THE CLASS');
  ELSE
    IF V_FRESHMAN_COUNT != V_FRESHMAN_WAITING THEN
      DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_FRESHMAN_WAITING   || ' FRESHMEN ON THE WAITING LIST');
      DBMS_OUTPUT.PUT_LINE('HOWEVER, THERE ARE ' || (V_FRESHMAN_COUNT - V_FRESHMAN_WAITING) || ' FRESHMEN THAT MADE IT INTO THE CLASS.');
    ELSE
      DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_FRESHMAN_WAITING   || ' FRESHMEN ON THE WAITING LIST');
    END IF;
  END IF;
  
  IF V_SOPHOMORE_WAITING = 0 THEN
    DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_SOPHOMORE_COUNT  || ' SOPHOMORES IN THE CLASS');
  ELSE
    IF V_SOPHOMORE_COUNT != V_SOPHOMORE_WAITING THEN
      DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_SOPHOMORE_WAITING   || ' SOPHOMORES ON THE WAITING LIST');
      DBMS_OUTPUT.PUT_LINE('HOWEVER, THERE ARE ' || (V_SOPHOMORE_COUNT - V_SOPHOMORE_WAITING) || ' SOPHOMORES THAT MADE IT INTO THE CLASS.');
    ELSE
      DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_SOPHOMORE_WAITING   || ' FRESHMEN ON THE WAITING LIST');
    END IF;
  END IF;
  
  IF V_JUNIORS_WAITING = 0 THEN
    DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_JUNIOR_COUNT   || ' JUNIORS IN THE CLASS');
  ELSE
    IF V_JUNIOR_COUNT != V_JUNIORS_WAITING THEN
      DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_JUNIORS_WAITING   || ' JUNIORS ON THE WAITING LIST');
      DBMS_OUTPUT.PUT_LINE('HOWEVER, THERE ARE ' || (V_JUNIOR_COUNT - V_JUNIORS_WAITING) || ' JUNIORS THAT MADE IT INTO THE CLASS.');
    ELSE
      DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_JUNIORS_WAITING   || ' JUNIORS ON THE WAITING LIST');
    END IF;
  END IF;
  
  IF V_SENIORS_WAITING = 0 THEN
    DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_SENIOR_COUNT   || ' SENIORS IN THE CLASS');
  ELSE
    IF V_SENIOR_COUNT != V_SENIORS_WAITING THEN
      DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_SENIORS_WAITING   || ' SENIORS ON THE WAITING LIST');
      DBMS_OUTPUT.PUT_LINE('HOWEVER, THERE ARE ' || (V_SENIOR_COUNT - V_SENIORS_WAITING) || ' SENIORS THAT MADE IT INTO THE CLASS.');
    ELSE
      DBMS_OUTPUT.PUT_LINE('THERE ARE ' || V_SENIORS_WAITING   || ' SENIORS ON THE WAITING LIST');
    END IF;
  END IF;
END;






















