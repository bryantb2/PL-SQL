-- PART 1
DESCRIBE PRODUCT;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
CREATE TABLE PRODUCT 
(SHIPPING_ID      NUMBER(12) PRIMARY KEY,
PRICE             NUMBER(8,2),
PRODUCT_ORDERED   NUMBER(12),
AMOUNT_ORDERED    NUMBER(12),
FK_SHOPS_ID       NUMBER(12));


DECLARE
  TYPE PRODUCT_REC_TYPE IS RECORD
  (SHIPPING_ID      PRODUCT.SHIPPING_ID%TYPE,
  PRICE             PRODUCT.PRICE%TYPE,
  PRODUCT_ORDERED   PRODUCT.PRODUCT_ORDERED%TYPE,
  AMOUNT_ORDERED    PRODUCT.AMOUNT_ORDERED%TYPE,
  FK_SHOPS_ID       PRODUCT.FK_SHOPS_ID%TYPE);
  
  TEST_ONE PRODUCT_REC_TYPE;
  TEST_TWO PRODUCT_REC_TYPE;
BEGIN
  TEST_ONE := TEST_TWO;
END;


-- PART 2
DESCRIBE TEACHER;
SELECT * FROM TEACHER;
SELECT * FROM DEPARTMENT;
SELECT * FROM SECTION ORDER BY FK_TEACHER_ID;
CREATE OR REPLACE PACKAGE TEACHER_INFO
IS
  
  -- teacher record type
  TYPE TEACHER_RECORD_TYPE IS RECORD
  (TEACHER_ID         TEACHER.TEACHER_ID%TYPE,
  TEACHER_FIRST_NAME  TEACHER.TEACHER_FIRST_NAME%TYPE,
  TEACHER_LAST_NAME   TEACHER.TEACHER_LAST_NAME%TYPE,
  SALARY              TEACHER.SALARY%TYPE,
  FK_DEPARTMENT_ID    TEACHER.FK_DEPARTMENT_ID%TYPE);
  
  -- teacher/depart info type
  TYPE TEACHER_SECTION_TYPE IS RECORD
  (NUMBER_OF_SECTIONS   NUMBER,
  DEPARTMENT_NAME       DEPARTMENT.DEPARTMENT_NAME%TYPE);
  
  -- department data
  CURSOR DEPART_CUR IS
    SELECT * FROM DEPARTMENT;
  -- section data
  CURSOR SECTION_CUR IS
    SELECT COUNT(SECTION.SECTION_ID) AS TAUGHT_SECTIONS, FK_TEACHER_ID AS TEACHER_ID
      FROM SECTION
      GROUP BY FK_TEACHER_ID
      ORDER BY TAUGHT_SECTIONS DESC;
  
  -- get teacher procedure
  PROCEDURE GET_TEACHER_DATA (TEACHER_ID_ARG IN VARCHAR2, TEACHER_RECORD OUT TEACHER_RECORD_TYPE);
  -- get number of sections for teacher
  PROCEDURE GET_TEACHER_SECTIONS (TEACHER_RECORD IN TEACHER_RECORD_TYPE, TEACHER_DEPART_INFO OUT TEACHER_SECTION_TYPE);
  
END TEACHER_INFO;  

CREATE OR REPLACE PACKAGE BODY TEACHER_INFO
IS
  PROCEDURE GET_TEACHER_DATA (TEACHER_ID_ARG IN VARCHAR2, TEACHER_RECORD OUT TEACHER_RECORD_TYPE)
  IS
    INVALID_DEPART_ID EXCEPTION;
    PRAGMA EXCEPTION_INIT (INVALID_DEPART_ID, -200010);
  BEGIN
    -- select teacher record
    SELECT *
      INTO TEACHER_RECORD
      FROM TEACHER
      WHERE TEACHER.TEACHER_ID = TEACHER_ID_ARG;
    -- raise exception if the department id is null
    IF TEACHER_RECORD.FK_DEPARTMENT_ID IS NULL THEN 
      RAISE INVALID_DEPART_ID;
    END IF;  
  EXCEPTION
    WHEN INVALID_DEPART_ID THEN
      DBMS_OUTPUT.PUT_LINE('Invalid department id for teacher. Most likely the result of a null department field.');
  END GET_TEACHER_DATA;
  
  PROCEDURE GET_TEACHER_SECTIONS (TEACHER_RECORD IN TEACHER_RECORD_TYPE, TEACHER_DEPART_INFO OUT TEACHER_SECTION_TYPE)
  IS
  BEGIN
    -- get/set section data by teacher id
    FOR SECTION_REC IN SECTION_CUR
    LOOP
      IF SECTION_REC.TEACHER_ID = TEACHER_RECORD.TEACHER_ID THEN
        DBMS_OUTPUT.PUT_LINE('Inside get teacher sections, teacher id is ' || SECTION_REC.TEACHER_ID);
        TEACHER_DEPART_INFO.NUMBER_OF_SECTIONS := SECTION_REC.TAUGHT_SECTIONS;
      END IF;
    END LOOP;
    -- get department name by teacher id
    FOR DEPART IN DEPART_CUR
    LOOP
      IF TEACHER_RECORD.FK_DEPARTMENT_ID = DEPART.DEPARTMENT_ID THEN
        TEACHER_DEPART_INFO.DEPARTMENT_NAME := DEPART.DEPARTMENT_NAME;
      END IF;
    END LOOP;
  END GET_TEACHER_SECTIONS;
END TEACHER_INFO;

-- TESTING PART 2 PACKAGE
DECLARE
  TEACHER_RECORD        TEACHER_INFO.TEACHER_RECORD_TYPE;
  TEACHER_DEPART_DATA   TEACHER_INFO.TEACHER_SECTION_TYPE;
BEGIN
  -- call package procedures to get teacher data
  TEACHER_INFO.GET_TEACHER_DATA('L0234567', TEACHER_RECORD);
  TEACHER_INFO.GET_TEACHER_SECTIONS(TEACHER_RECORD, TEACHER_DEPART_DATA);
  -- print results
  DBMS_OUTPUT.PUT_LINE('Teacher information: ');
  DBMS_OUTPUT.PUT_LINE('First Name - '       || TEACHER_RECORD.TEACHER_FIRST_NAME);
  DBMS_OUTPUT.PUT_LINE('Last Name - '        || TEACHER_RECORD.TEACHER_LAST_NAME);
  DBMS_OUTPUT.PUT_LINE('Teacher Salary - '   || TO_CHAR(TEACHER_RECORD.SALARY,'L999G999D99'));
  DBMS_OUTPUT.PUT_LINE('Teacher ID - '       || TEACHER_RECORD.TEACHER_ID);
  DBMS_OUTPUT.PUT_LINE('Department Name - '       || TEACHER_DEPART_DATA.DEPARTMENT_NAME);
  DBMS_OUTPUT.PUT_LINE('Sections Taught - '       || TEACHER_DEPART_DATA.NUMBER_OF_SECTIONS);
END;


SELECT * FROM TEACHER WHERE TEACHER.TEACHER_ID = 'L0234567';
